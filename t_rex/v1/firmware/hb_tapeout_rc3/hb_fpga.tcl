#*****************************************************************************************
# Vivado (TM) v2019.1 (64-bit)
#
# hb_fpga.tcl: Tcl script for re-creating project 'ku11p_test'
#
# Generated by Vivado on Mon Apr 20 20:55:30 PDT 2020
# IP Build 2548770 on Fri May 24 18:01:18 MDT 2019
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (hb_fpga.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 3. The following remote source files that were added to the original project:-
#
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_misc/bsg_defines.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_noc/bsg_noc_links.vh"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_noc/bsg_wormhole_router.vh"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_cache/bsg_cache_dma_pkt.vh"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_tag/bsg_tag.vh"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/bsg_manycore/v/bsg_manycore_packet.vh"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_cache/bsg_cache_pkg.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_tag/bsg_tag_pkg.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_noc/bsg_noc_pkg.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_noc/bsg_wormhole_router_pkg.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_fpu/bsg_fpu_pkg.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/bsg_designs/toplevels/bsg_ac_manycore_fpu_rc3/v/bsg_chip_pkg.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/v/design_1_wrapper.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/common/v/bsg_m_axi_lite_to_fifo.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/bsg_designs/toplevels/bsg_ac_manycore_fpu_rc3/testing/v/bsg_wormhole_async_to_cache_dma.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/bsg_designs/modules/bsg_chip_io_complex/bsg_noc_repeater_node.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/bsg_designs/modules/bsg_chip_io_complex/bsg_chip_io_complex_dual_network.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/bsg_designs/modules/bsg_chip_io_complex/bsg_chip_io_complex.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/v/mc_stream_nbf_loader.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/v/mc_stream_mmio.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/v/mc_stream_host.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/v/bsg_cache_to_axi_hashed.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/bsg_packaging/uw_bga/pinouts/bsg_asic_cloud/common/verilog/bsg_chip_swizzle_adapter.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/bsg_manycore/v/bsg_1hold.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/bsg_manycore/v/bsg_manycore_endpoint.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/bsg_manycore/v/bsg_manycore_endpoint_standard.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/bsg_manycore/v/bsg_manycore_link_async_to_wormhole.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/bsg_manycore/v/bsg_manycore_lock_ctrl.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/bsg_manycore/v/vanilla_bean/hash_function_reverse.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_async/bsg_launch_sync_sync.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_async/bsg_sync_sync.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_async/bsg_async_ptr_gray.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_async/bsg_async_credit_counter.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_async/bsg_async_fifo.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl_new/bsg_cache/bsg_cache_to_axi_rx.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl_new/bsg_cache/bsg_cache_to_axi_tx.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_dataflow/bsg_round_robin_1_to_n.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_dataflow/bsg_1_to_n_tagged_fifo.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_dataflow/bsg_round_robin_n_to_1.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_dataflow/bsg_1_to_n_tagged.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_dataflow/bsg_serial_in_parallel_out_full.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_dataflow/bsg_two_fifo.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_dataflow/bsg_serial_in_parallel_out.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_dataflow/bsg_channel_tunnel_in.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_dataflow/bsg_fifo_1r1w_small.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_dataflow/bsg_one_fifo.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_dataflow/bsg_fifo_tracker.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_dataflow/bsg_channel_tunnel.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_dataflow/bsg_fifo_1r1w_pseudo_large.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_dataflow/bsg_channel_tunnel_out.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_dataflow/bsg_fifo_1rw_large.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_dataflow/bsg_parallel_in_serial_out.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_fsb/bsg_fsb_node_trace_replay.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_link/bsg_link_ddr_downstream.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_link/bsg_link_source_sync_upstream.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_link/bsg_link_oddr_phy.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_link/bsg_link_source_sync_downstream.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_link/bsg_link_iddr_phy.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_link/bsg_link_ddr_upstream.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_mem/bsg_mem_1r1w_synth.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_mem/bsg_mem_1rw_sync_synth.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_mem/bsg_mem_1r1w.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_mem/bsg_mem_1rw_sync.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_noc/bsg_wormhole_router_decoder_dor.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_noc/bsg_ready_and_link_async_to_wormhole.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_noc/bsg_wormhole_router_generalized.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_noc/bsg_wormhole_router_output_control.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_noc/bsg_wormhole_router_input_control.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_tag/bsg_tag_client.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_tag/bsg_tag_trace_replay.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_tag/bsg_tag_master.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_misc/bsg_circular_ptr.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_misc/bsg_counter_clear_up.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_misc/bsg_concentrate_static.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_misc/bsg_counter_up_down.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_misc/bsg_gray_to_binary.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_misc/bsg_counter_set_down.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_misc/bsg_dff_reset.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_misc/bsg_unconcentrate_static.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_misc/bsg_dff_en.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_misc/bsg_scan.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_misc/bsg_mux_one_hot.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_misc/bsg_dff.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_misc/bsg_decode.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_misc/bsg_mux2_gatestack.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_misc/bsg_crossbar_o_by_i.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_misc/bsg_dff_en_bypass.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_misc/bsg_decode_with_v.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_misc/bsg_dff_reset_en.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_misc/bsg_transpose.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_misc/bsg_array_concentrate_static.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_misc/bsg_array_reverse.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_misc/bsg_round_robin_arb.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_misc/bsg_counter_up_down_variable.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/basejump_stl/bsg_misc/bsg_encode_one_hot.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/v/bsg_tag_boot_rom.v"
#    "/home/paul/artix_7_test/bsg_motherboards/t_rex/v1/firmware/hb_tapeout_rc3/xdc/design_1.xdc"
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "ku11p_test"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "hb_fpga.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/ku11p_test"]"

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xcku11p-ffvd900-2-e

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "dsa.accelerator_binary_content" -value "bitstream" -objects $obj
set_property -name "dsa.accelerator_binary_format" -value "xclbin2" -objects $obj
set_property -name "dsa.description" -value "Vivado generated DSA" -objects $obj
set_property -name "dsa.dr_bd_base_address" -value "0" -objects $obj
set_property -name "dsa.emu_dir" -value "emu" -objects $obj
set_property -name "dsa.flash_interface_type" -value "bpix16" -objects $obj
set_property -name "dsa.flash_offset_address" -value "0" -objects $obj
set_property -name "dsa.flash_size" -value "1024" -objects $obj
set_property -name "dsa.host_architecture" -value "x86_64" -objects $obj
set_property -name "dsa.host_interface" -value "pcie" -objects $obj
set_property -name "dsa.num_compute_units" -value "60" -objects $obj
set_property -name "dsa.platform_state" -value "pre_synth" -objects $obj
set_property -name "dsa.vendor" -value "xilinx" -objects $obj
set_property -name "dsa.version" -value "0.0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xcku11p-ffvd900-2-e" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "source_mgmt_mode" -value "None" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "1" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "1" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "1" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "1" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "1" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "1" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "1" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/basejump_stl/bsg_misc/bsg_defines.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_noc/bsg_noc_links.vh"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_noc/bsg_wormhole_router.vh"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_cache/bsg_cache_dma_pkt.vh"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_tag/bsg_tag.vh"] \
 [file normalize "${origin_dir}/bsg_manycore/v/bsg_manycore_packet.vh"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_cache/bsg_cache_pkg.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_tag/bsg_tag_pkg.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_noc/bsg_noc_pkg.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_noc/bsg_wormhole_router_pkg.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_fpu/bsg_fpu_pkg.v"] \
 [file normalize "${origin_dir}/bsg_designs/toplevels/bsg_ac_manycore_fpu_rc3/v/bsg_chip_pkg.v"] \
 [file normalize "${origin_dir}/v/design_1_wrapper.v"] \
 [file normalize "${origin_dir}/../common/v/bsg_m_axi_lite_to_fifo.v"] \
 [file normalize "${origin_dir}/bsg_designs/toplevels/bsg_ac_manycore_fpu_rc3/testing/v/bsg_wormhole_async_to_cache_dma.v"] \
 [file normalize "${origin_dir}/bsg_designs/modules/bsg_chip_io_complex/bsg_noc_repeater_node.v"] \
 [file normalize "${origin_dir}/bsg_designs/modules/bsg_chip_io_complex/bsg_chip_io_complex_dual_network.v"] \
 [file normalize "${origin_dir}/bsg_designs/modules/bsg_chip_io_complex/bsg_chip_io_complex.v"] \
 [file normalize "${origin_dir}/v/mc_stream_nbf_loader.v"] \
 [file normalize "${origin_dir}/v/mc_stream_mmio.v"] \
 [file normalize "${origin_dir}/v/mc_stream_host.v"] \
 [file normalize "${origin_dir}/v/bsg_cache_to_axi_hashed.v"] \
 [file normalize "${origin_dir}/bsg_packaging/uw_bga/pinouts/bsg_asic_cloud/common/verilog/bsg_chip_swizzle_adapter.v"] \
 [file normalize "${origin_dir}/bsg_manycore/v/bsg_1hold.v"] \
 [file normalize "${origin_dir}/bsg_manycore/v/bsg_manycore_endpoint.v"] \
 [file normalize "${origin_dir}/bsg_manycore/v/bsg_manycore_endpoint_standard.v"] \
 [file normalize "${origin_dir}/bsg_manycore/v/bsg_manycore_link_async_to_wormhole.v"] \
 [file normalize "${origin_dir}/bsg_manycore/v/bsg_manycore_lock_ctrl.v"] \
 [file normalize "${origin_dir}/bsg_manycore/v/vanilla_bean/hash_function_reverse.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_async/bsg_launch_sync_sync.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_async/bsg_sync_sync.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_async/bsg_async_ptr_gray.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_async/bsg_async_credit_counter.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_async/bsg_async_fifo.v"] \
 [file normalize "${origin_dir}/basejump_stl_new/bsg_cache/bsg_cache_to_axi_rx.v"] \
 [file normalize "${origin_dir}/basejump_stl_new/bsg_cache/bsg_cache_to_axi_tx.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_dataflow/bsg_round_robin_1_to_n.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_dataflow/bsg_1_to_n_tagged_fifo.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_dataflow/bsg_round_robin_n_to_1.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_dataflow/bsg_1_to_n_tagged.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_dataflow/bsg_serial_in_parallel_out_full.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_dataflow/bsg_two_fifo.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_dataflow/bsg_serial_in_parallel_out.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_dataflow/bsg_channel_tunnel_in.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_dataflow/bsg_fifo_1r1w_small.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_dataflow/bsg_one_fifo.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_dataflow/bsg_fifo_tracker.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_dataflow/bsg_channel_tunnel.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_dataflow/bsg_fifo_1r1w_pseudo_large.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_dataflow/bsg_channel_tunnel_out.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_dataflow/bsg_fifo_1rw_large.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_dataflow/bsg_parallel_in_serial_out.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_fsb/bsg_fsb_node_trace_replay.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_link/bsg_link_ddr_downstream.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_link/bsg_link_source_sync_upstream.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_link/bsg_link_oddr_phy.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_link/bsg_link_source_sync_downstream.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_link/bsg_link_iddr_phy.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_link/bsg_link_ddr_upstream.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_mem/bsg_mem_1r1w_synth.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_mem/bsg_mem_1rw_sync_synth.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_mem/bsg_mem_1r1w.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_mem/bsg_mem_1rw_sync.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_noc/bsg_wormhole_router_decoder_dor.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_noc/bsg_ready_and_link_async_to_wormhole.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_noc/bsg_wormhole_router_generalized.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_noc/bsg_wormhole_router_output_control.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_noc/bsg_wormhole_router_input_control.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_tag/bsg_tag_client.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_tag/bsg_tag_trace_replay.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_tag/bsg_tag_master.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_misc/bsg_circular_ptr.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_misc/bsg_counter_clear_up.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_misc/bsg_concentrate_static.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_misc/bsg_counter_up_down.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_misc/bsg_gray_to_binary.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_misc/bsg_counter_set_down.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_misc/bsg_dff_reset.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_misc/bsg_unconcentrate_static.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_misc/bsg_dff_en.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_misc/bsg_scan.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_misc/bsg_mux_one_hot.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_misc/bsg_dff.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_misc/bsg_decode.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_misc/bsg_mux2_gatestack.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_misc/bsg_crossbar_o_by_i.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_misc/bsg_dff_en_bypass.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_misc/bsg_decode_with_v.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_misc/bsg_dff_reset_en.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_misc/bsg_transpose.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_misc/bsg_array_concentrate_static.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_misc/bsg_array_reverse.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_misc/bsg_round_robin_arb.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_misc/bsg_counter_up_down_variable.v"] \
 [file normalize "${origin_dir}/basejump_stl/bsg_misc/bsg_encode_one_hot.v"] \
 [file normalize "${origin_dir}/v/bsg_tag_boot_rom.v"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/basejump_stl/bsg_misc/bsg_defines.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj
set_property -name "is_global_include" -value "1" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_noc/bsg_noc_links.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj
set_property -name "is_global_include" -value "1" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_noc/bsg_wormhole_router.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj
set_property -name "is_global_include" -value "1" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_cache/bsg_cache_dma_pkt.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_tag/bsg_tag.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/bsg_manycore/v/bsg_manycore_packet.vh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_cache/bsg_cache_pkg.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_tag/bsg_tag_pkg.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_noc/bsg_noc_pkg.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_noc/bsg_wormhole_router_pkg.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_fpu/bsg_fpu_pkg.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/bsg_designs/toplevels/bsg_ac_manycore_fpu_rc3/v/bsg_chip_pkg.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/v/design_1_wrapper.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../common/v/bsg_m_axi_lite_to_fifo.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/bsg_designs/toplevels/bsg_ac_manycore_fpu_rc3/testing/v/bsg_wormhole_async_to_cache_dma.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/bsg_designs/modules/bsg_chip_io_complex/bsg_noc_repeater_node.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/bsg_designs/modules/bsg_chip_io_complex/bsg_chip_io_complex_dual_network.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/bsg_designs/modules/bsg_chip_io_complex/bsg_chip_io_complex.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/v/mc_stream_nbf_loader.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/v/mc_stream_mmio.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/v/mc_stream_host.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/v/bsg_cache_to_axi_hashed.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/bsg_packaging/uw_bga/pinouts/bsg_asic_cloud/common/verilog/bsg_chip_swizzle_adapter.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/bsg_manycore/v/bsg_1hold.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/bsg_manycore/v/bsg_manycore_endpoint.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/bsg_manycore/v/bsg_manycore_endpoint_standard.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/bsg_manycore/v/bsg_manycore_link_async_to_wormhole.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/bsg_manycore/v/bsg_manycore_lock_ctrl.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/bsg_manycore/v/vanilla_bean/hash_function_reverse.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_async/bsg_launch_sync_sync.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_async/bsg_sync_sync.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_async/bsg_async_ptr_gray.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_async/bsg_async_credit_counter.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_async/bsg_async_fifo.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl_new/bsg_cache/bsg_cache_to_axi_rx.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl_new/bsg_cache/bsg_cache_to_axi_tx.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_dataflow/bsg_round_robin_1_to_n.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_dataflow/bsg_1_to_n_tagged_fifo.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_dataflow/bsg_round_robin_n_to_1.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_dataflow/bsg_1_to_n_tagged.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_dataflow/bsg_serial_in_parallel_out_full.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_dataflow/bsg_two_fifo.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_dataflow/bsg_serial_in_parallel_out.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_dataflow/bsg_channel_tunnel_in.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_dataflow/bsg_fifo_1r1w_small.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_dataflow/bsg_one_fifo.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_dataflow/bsg_fifo_tracker.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_dataflow/bsg_channel_tunnel.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_dataflow/bsg_fifo_1r1w_pseudo_large.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_dataflow/bsg_channel_tunnel_out.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_dataflow/bsg_fifo_1rw_large.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_dataflow/bsg_parallel_in_serial_out.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_fsb/bsg_fsb_node_trace_replay.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_link/bsg_link_ddr_downstream.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_link/bsg_link_source_sync_upstream.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_link/bsg_link_oddr_phy.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_link/bsg_link_source_sync_downstream.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_link/bsg_link_iddr_phy.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_link/bsg_link_ddr_upstream.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_mem/bsg_mem_1r1w_synth.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_mem/bsg_mem_1rw_sync_synth.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_mem/bsg_mem_1r1w.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_mem/bsg_mem_1rw_sync.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_noc/bsg_wormhole_router_decoder_dor.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_noc/bsg_ready_and_link_async_to_wormhole.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_noc/bsg_wormhole_router_generalized.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_noc/bsg_wormhole_router_output_control.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_noc/bsg_wormhole_router_input_control.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_tag/bsg_tag_client.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_tag/bsg_tag_trace_replay.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_tag/bsg_tag_master.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_misc/bsg_circular_ptr.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_misc/bsg_counter_clear_up.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_misc/bsg_concentrate_static.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_misc/bsg_counter_up_down.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_misc/bsg_gray_to_binary.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_misc/bsg_counter_set_down.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_misc/bsg_dff_reset.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_misc/bsg_unconcentrate_static.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_misc/bsg_dff_en.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_misc/bsg_scan.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_misc/bsg_mux_one_hot.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_misc/bsg_dff.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_misc/bsg_decode.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_misc/bsg_mux2_gatestack.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_misc/bsg_crossbar_o_by_i.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_misc/bsg_dff_en_bypass.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_misc/bsg_decode_with_v.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_misc/bsg_dff_reset_en.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_misc/bsg_transpose.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_misc/bsg_array_concentrate_static.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_misc/bsg_array_reverse.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_misc/bsg_round_robin_arb.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_misc/bsg_counter_up_down_variable.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/basejump_stl/bsg_misc/bsg_encode_one_hot.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/v/bsg_tag_boot_rom.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "design_1_wrapper" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/xdc/design_1.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/xdc/design_1.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_part" -value "xcku11p-ffvd900-2-e" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "design_1_wrapper" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added


# Proc to create BD design_1
proc cr_bd_design_1 { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name design_1

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:ddr4:2.2\
  xilinx.com:ip:ila:6.2\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:ip:util_ds_buf:2.1\
  xilinx.com:ip:xdma:4.1\
  "

   set list_ips_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set ddr4_sdram [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:ddr4_rtl:1.0 ddr4_sdram ]

  set m_axi_lite [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_lite ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {32} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.FREQ_HZ {250000000} \
   CONFIG.PROTOCOL {AXI4LITE} \
   ] $m_axi_lite

  set pci_express_x4 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:pcie_7x_mgt_rtl:1.0 pci_express_x4 ]

  set pcie_refclk [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 pcie_refclk ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {100000000} \
   ] $pcie_refclk

  set s_axi [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {32} \
   CONFIG.ARUSER_WIDTH {0} \
   CONFIG.AWUSER_WIDTH {0} \
   CONFIG.BUSER_WIDTH {0} \
   CONFIG.DATA_WIDTH {256} \
   CONFIG.FREQ_HZ {100000000} \
   CONFIG.HAS_BRESP {1} \
   CONFIG.HAS_BURST {1} \
   CONFIG.HAS_CACHE {1} \
   CONFIG.HAS_LOCK {1} \
   CONFIG.HAS_PROT {1} \
   CONFIG.HAS_QOS {1} \
   CONFIG.HAS_REGION {1} \
   CONFIG.HAS_RRESP {1} \
   CONFIG.HAS_WSTRB {1} \
   CONFIG.ID_WIDTH {1} \
   CONFIG.MAX_BURST_LENGTH {256} \
   CONFIG.NUM_READ_OUTSTANDING {1} \
   CONFIG.NUM_READ_THREADS {1} \
   CONFIG.NUM_WRITE_OUTSTANDING {1} \
   CONFIG.NUM_WRITE_THREADS {1} \
   CONFIG.PROTOCOL {AXI4} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.RUSER_BITS_PER_BYTE {0} \
   CONFIG.RUSER_WIDTH {0} \
   CONFIG.SUPPORTS_NARROW_BURST {1} \
   CONFIG.WUSER_BITS_PER_BYTE {0} \
   CONFIG.WUSER_WIDTH {0} \
   ] $s_axi

  set sysclk_300 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 sysclk_300 ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {300000000} \
   ] $sysclk_300


  # Create ports
  set mig_calib_done [ create_bd_port -dir O -type data mig_calib_done ]
  set mig_clk [ create_bd_port -dir O -type clk mig_clk ]
  set_property -dict [ list \
   CONFIG.ASSOCIATED_BUSIF {s_axi} \
   CONFIG.ASSOCIATED_RESET {mig_rstn} \
   CONFIG.FREQ_HZ {100000000} \
 ] $mig_clk
  set mig_rstn [ create_bd_port -dir O -from 0 -to 0 -type rst mig_rstn ]
  set pcie_clk [ create_bd_port -dir O -type clk pcie_clk ]
  set_property -dict [ list \
   CONFIG.ASSOCIATED_BUSIF {m_axi_lite} \
   CONFIG.ASSOCIATED_RESET {pcie_rstn} \
   CONFIG.FREQ_HZ {250000000} \
 ] $pcie_clk
  set pcie_lnk_up [ create_bd_port -dir O -type data pcie_lnk_up ]
  set pcie_perstn [ create_bd_port -dir I -type rst pcie_perstn ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_LOW} \
 ] $pcie_perstn
  set pcie_rstn [ create_bd_port -dir O -from 0 -to 0 -type rst pcie_rstn ]
  set reset [ create_bd_port -dir I -type rst reset ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] $reset

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {1} \
 ] $axi_interconnect_0

  # Create instance: ddr4_0, and set properties
  set ddr4_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ddr4:2.2 ddr4_0 ]
  set_property -dict [ list \
   CONFIG.ADDN_UI_CLKOUT1_FREQ_HZ {100} \
   CONFIG.C0.DDR4_AxiAddressWidth {32} \
   CONFIG.C0.DDR4_AxiDataWidth {256} \
   CONFIG.C0.DDR4_CLKOUT0_DIVIDE {5} \
   CONFIG.C0.DDR4_CasWriteLatency {12} \
   CONFIG.C0.DDR4_DataWidth {32} \
   CONFIG.C0.DDR4_InputClockPeriod {3332} \
   CONFIG.C0.DDR4_MemoryPart {MT40A1G16WBU-083E} \
   CONFIG.C0.DDR4_TimePeriod {833} \
 ] $ddr4_0

  # Create instance: ila_0, and set properties
  set ila_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ila:6.2 ila_0 ]

  # Create instance: proc_sys_reset_0, and set properties
  set proc_sys_reset_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_0 ]

  # Create instance: proc_sys_reset_1, and set properties
  set proc_sys_reset_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_1 ]

  # Create instance: proc_sys_reset_2, and set properties
  set proc_sys_reset_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_2 ]

  # Create instance: util_ds_buf_0, and set properties
  set util_ds_buf_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.1 util_ds_buf_0 ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {IBUFDSGTE} \
 ] $util_ds_buf_0

  # Create instance: xdma_0, and set properties
  set xdma_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xdma:4.1 xdma_0 ]
  set_property -dict [ list \
   CONFIG.PF0_DEVICE_ID_mqdma {9034} \
   CONFIG.PF2_DEVICE_ID_mqdma {9034} \
   CONFIG.PF3_DEVICE_ID_mqdma {9034} \
   CONFIG.axi_data_width {128_bit} \
   CONFIG.axilite_master_en {true} \
   CONFIG.axilite_master_scale {Kilobytes} \
   CONFIG.axilite_master_size {64} \
   CONFIG.axisten_freq {250} \
   CONFIG.en_gt_selection {true} \
   CONFIG.mode_selection {Advanced} \
   CONFIG.pcie_blk_locn {X1Y1} \
   CONFIG.pf0_device_id {9034} \
   CONFIG.pf0_msix_cap_pba_bir {BAR_1} \
   CONFIG.pf0_msix_cap_table_bir {BAR_1} \
   CONFIG.pl_link_cap_max_link_speed {8.0_GT/s} \
   CONFIG.pl_link_cap_max_link_width {X4} \
   CONFIG.plltype {QPLL1} \
 ] $xdma_0

  # Create interface connections
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_interconnect_0/M00_AXI] [get_bd_intf_pins ddr4_0/C0_DDR4_S_AXI]
  connect_bd_intf_net -intf_net ddr4_0_C0_DDR4 [get_bd_intf_ports ddr4_sdram] [get_bd_intf_pins ddr4_0/C0_DDR4]
  connect_bd_intf_net -intf_net default_sysclk1_300_1 [get_bd_intf_ports sysclk_300] [get_bd_intf_pins ddr4_0/C0_SYS_CLK]
  connect_bd_intf_net -intf_net pcie_refclk_1 [get_bd_intf_ports pcie_refclk] [get_bd_intf_pins util_ds_buf_0/CLK_IN_D]
  connect_bd_intf_net -intf_net s_axi_1 [get_bd_intf_ports s_axi] [get_bd_intf_pins axi_interconnect_0/S00_AXI]
connect_bd_intf_net -intf_net [get_bd_intf_nets s_axi_1] [get_bd_intf_ports s_axi] [get_bd_intf_pins ila_0/SLOT_0_AXI]
  connect_bd_intf_net -intf_net xdma_0_M_AXI_LITE [get_bd_intf_ports m_axi_lite] [get_bd_intf_pins xdma_0/M_AXI_LITE]
  connect_bd_intf_net -intf_net xdma_0_pcie_mgt [get_bd_intf_ports pci_express_x4] [get_bd_intf_pins xdma_0/pcie_mgt]

  # Create port connections
  connect_bd_net -net ddr4_0_addn_ui_clkout1 [get_bd_ports mig_clk] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins ddr4_0/addn_ui_clkout1] [get_bd_pins ila_0/clk] [get_bd_pins proc_sys_reset_2/slowest_sync_clk]
  connect_bd_net -net ddr4_0_c0_ddr4_ui_clk [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins ddr4_0/c0_ddr4_ui_clk] [get_bd_pins proc_sys_reset_0/slowest_sync_clk]
  connect_bd_net -net ddr4_0_c0_ddr4_ui_clk_sync_rst [get_bd_pins ddr4_0/c0_ddr4_ui_clk_sync_rst] [get_bd_pins proc_sys_reset_0/aux_reset_in] [get_bd_pins proc_sys_reset_2/aux_reset_in]
  connect_bd_net -net ddr4_0_c0_init_calib_complete [get_bd_ports mig_calib_done] [get_bd_pins ddr4_0/c0_init_calib_complete]
  connect_bd_net -net pcie_perstn_1 [get_bd_ports pcie_perstn] [get_bd_pins xdma_0/sys_rst_n]
  connect_bd_net -net proc_sys_reset_0_peripheral_aresetn [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins ddr4_0/c0_ddr4_aresetn] [get_bd_pins proc_sys_reset_0/peripheral_aresetn]
  connect_bd_net -net proc_sys_reset_1_peripheral_aresetn [get_bd_ports pcie_rstn] [get_bd_pins proc_sys_reset_1/peripheral_aresetn]
  connect_bd_net -net proc_sys_reset_2_peripheral_aresetn [get_bd_ports mig_rstn] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins proc_sys_reset_2/peripheral_aresetn]
  connect_bd_net -net reset_1 [get_bd_ports reset] [get_bd_pins ddr4_0/sys_rst] [get_bd_pins proc_sys_reset_0/ext_reset_in] [get_bd_pins proc_sys_reset_1/ext_reset_in] [get_bd_pins proc_sys_reset_2/ext_reset_in]
  connect_bd_net -net util_ds_buf_0_IBUF_DS_ODIV2 [get_bd_pins util_ds_buf_0/IBUF_DS_ODIV2] [get_bd_pins xdma_0/sys_clk]
  connect_bd_net -net util_ds_buf_0_IBUF_OUT [get_bd_pins util_ds_buf_0/IBUF_OUT] [get_bd_pins xdma_0/sys_clk_gt]
  connect_bd_net -net xdma_0_axi_aclk [get_bd_ports pcie_clk] [get_bd_pins proc_sys_reset_1/slowest_sync_clk] [get_bd_pins xdma_0/axi_aclk]
  connect_bd_net -net xdma_0_axi_aresetn [get_bd_pins proc_sys_reset_1/aux_reset_in] [get_bd_pins xdma_0/axi_aresetn]
  connect_bd_net -net xdma_0_user_lnk_up [get_bd_ports pcie_lnk_up] [get_bd_pins xdma_0/user_lnk_up]

  # Create address segments
  create_bd_addr_seg -range 0x00010000 -offset 0x44A00000 [get_bd_addr_spaces xdma_0/M_AXI_LITE] [get_bd_addr_segs m_axi_lite/Reg] SEG_m_axi_lite_Reg
  create_bd_addr_seg -range 0x000100000000 -offset 0x00000000 [get_bd_addr_spaces s_axi] [get_bd_addr_segs ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] SEG_ddr4_0_C0_DDR4_ADDRESS_BLOCK


  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_design_1()
cr_bd_design_1 ""
set_property REGISTERED_WITH_MANAGER "1" [get_files design_1.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files design_1.bd ] 

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xcku11p-ffvd900-2-e -flow {Vivado Synthesis 2019} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2019" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xcku11p-ffvd900-2-e" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xcku11p-ffvd900-2-e -flow {Vivado Implementation 2019} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2019" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xcku11p-ffvd900-2-e" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
